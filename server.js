 /******************************************************
 * PLEASE DO NOT EDIT THIS FILE
 * the verification process may break
 * ***************************************************/

'use strict';

var fs = require('fs');
var express = require('express');
var app = express();
var axios =require('axios');

var MongoClient = require('mongodb').MongoClient;
var url = 'mongodb://localhost:27017/imageSearch';

if (!process.env.DISABLE_XORIGIN) {
  app.use(function(req, res, next) {
    var allowedOrigins = ['https://narrow-plane.gomix.me', 'https://www.freecodecamp.com'];
    var origin = req.headers.origin || '*';
    if(!process.env.XORIG_RESTRICT || allowedOrigins.indexOf(origin) > -1){
         console.log(origin);
         res.setHeader('Access-Control-Allow-Origin', origin);
         res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
    }
    next();
  });
}

app.use('/public', express.static(process.cwd() + '/public'));

app.route('/_api/package.json')
  .get(function(req, res, next) {
    console.log('requested');
    fs.readFile(__dirname + '/package.json', function(err, data) {
      if(err) return next(err);
      res.type('txt').send(data.toString());
    });
  });

app.route('/')
    .get(function(req, res) {
		  res.sendFile(process.cwd() + '/views/index.html');
    });

app.route('/input/:searchString')
    .get(function(req, res) {
      console.log("In Search String Section");
      var searchString = req.params.searchString;
      var offset = -1;
      console.log("Search String: " + searchString);
      if (req.query.offset) {
        offset = req.query.offset;
        console.log("offset by:" + req.query.offset);
      }

      //Image api search
      var apiKey = "GOOGLE API KEY HERE";
      var cse = "CUSTOM SEARCH ENGINE KEY HERE";
      var apiURL = "https://www.googleapis.com/customsearch/v1?key=" + apiKey + "&cx=" + cse + "&searchType=image&q=" + searchString;
      /*
        API Info
        https://developers.google.com/custom-search/json-api/v1/using_rest
        
        CSE LIST Info
        https://developers.google.com/custom-search/json-api/v1/reference/cse/list#request
      */

      if (offset !== -1) {
        apiURL += "&start=" + offset;
      }
      //console.log(apiURL);
      axios.get(apiURL).then(response => {
        MongoClient.connect(url, function(err, db) {
          if (err) {
            console.log('Unable to connect to the mongoDB server. Error: '. err);
          } else {
            console.log("Connection establsihed to database.");
            //console.log(req.params.input);
            //var query = {"shortened_Id": req.query.};
            db.collection("queries").insert({
              "term": searchString,
              "when": new Date()
            });
          }
        });

        var output = [];
        //console.log(response.data);
        var imageList = response.data.items;

        for (var i = 0; i < imageList.length; i++) {
          var image = {
            "url": imageList[i].link,
            "snippet": imageList[i].snippet,
            "thumbnail": imageList[i].image.thumbnailLink,
            "context": imageList[i].displayLink
          };
          output.push(image);
        }

        console.log(imageList.length);
        res.send(output);

      }).catch(error => {
        console.log("Error has occured");
        console.log(error);
        res.send("Error Here");
      });


  });

  function handleIt() {

  }

app.route('/latest')
    .get(function(req, res) {
      console.log("In Latest Section.");

      MongoClient.connect(url, function(err, db) {
        if (err) {
          console.log('Unable to connect to the mongoDB server. Error: '. err);
        } else {
          console.log("Connection establsihed to database.");
          db.collection("queries").find().sort({"_id":-1}).limit(10).toArray(function(err, result) {
            if (err) throw err;
            if (result.length >= 1) {
              console.log("Found Records");
              res.send(result);
            } else {
              console.log("Records Don't Exist.");
              res.send({'result': "Nothing found"});
            }
            db.close();
          });
        }
      });
    });

// Respond not found to all the wrong routes
app.use(function(req, res, next){
  res.status(404);
  res.type('txt').send('Not found');
});

// Error Middleware
app.use(function(err, req, res, next) {
  if(err) {
    res.status(err.status || 500)
      .type('txt')
      .send(err.message || 'SERVER ERROR');
  }
})

//For when launched on Glitch.com
if (process.env.PORT != null) {
  app.listen(process.env.PORT, function () {
    console.log('Node.js listening ...');
  });
} else {
  //Set port here.
  app.listen(23200, function () {
    console.log('Node.js listening ...');
  });
}
